<?xml version="1.0" encoding="UTF-8" ?>
<ruleset
  xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  name="Custom Ruleset for Intact Apex Static Analysis"
  xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd"
>
  <description>
    Custom Ruleset for Intact Apex Static Analysis
  </description>

  <!-- Best Practices -->
  <rule ref="category/apex/bestpractices.xml/ApexUnitTestClassShouldHaveAsserts"
  />
  <rule ref="category/apex/bestpractices.xml/ApexUnitTestClassShouldHaveAsserts"
  />
  <rule
    ref="category/apex/bestpractices.xml/ApexUnitTestMethodShouldHaveIsTestAnnotation"
  />
  <rule
    ref="category/apex/bestpractices.xml/ApexUnitTestShouldNotUseSeeAllDataTrue"
  />
  <rule ref="category/apex/bestpractices.xml/AvoidGlobalModifier" />
  <rule ref="category/apex/bestpractices.xml/AvoidLogicInTrigger" />
  <rule ref="category/apex/bestpractices.xml/DebugsShouldUseLoggingLevel">
    <properties>
      <property name="strictMode" value="false" />
    </properties>
  </rule>

  <!-- Code Style -->
  <rule ref="category/apex/codestyle.xml/ClassNamingConventions">
    <properties>
        <property name="testClassPattern" value="[A-Z][a-zA-Z0-9_]*_Test" />
        <property name="classPattern" value="[A-Z][a-zA-Z0-9_]*" />
    </properties>
  </rule>
  <rule ref="category/apex/codestyle.xml/FieldNamingConventions" />
  <!-- <rule ref="category/apex/codestyle.xml/ForLoopsMustUseBraces" /> -->
  <rule ref="category/apex/codestyle.xml/FormalParameterNamingConventions" />
  <!-- <rule ref="category/apex/codestyle.xml/IfElseStmtsMustUseBraces" /> -->
  <!-- <rule ref="category/apex/codestyle.xml/IfStmtsMustUseBraces" /> -->
  <rule ref="category/apex/codestyle.xml/LocalVariableNamingConventions" />
  <rule ref="category/apex/codestyle.xml/MethodNamingConventions" /> <!-- Custom pattern for method name start? -->
  <rule ref="category/apex/codestyle.xml/OneDeclarationPerLine">
    <properties>
        <property name="strictMode" value="true" />
    </properties>
  </rule>
  <rule ref="category/apex/codestyle.xml/PropertyNamingConventions" />
  <!-- <rule ref="category/apex/codestyle.xml/WhileLoopsMustUseBraces" /> -->

  <!-- Design -->
  <rule ref="category/apex/design.xml/AvoidDeeplyNestedIfStmts">
    <properties>
        <property name="problemDepth" value="4" />
    </properties>
  </rule>
  <rule ref="category/apex/design.xml/CyclomaticComplexity">
    <properties>
        <property name="classReportLevel" value="60" />
        <property name="methodReportLevel" value="10" />
    </properties>
  </rule>
  <rule ref="category/apex/design.xml/ExcessiveClassLength">
    <properties>
        <property name="minimum" value="800.0" />
    </properties>
  </rule>
  <rule ref="category/apex/design.xml/ExcessiveParameterList">
      <properties>
          <property name="minimum" value="6.0" />
      </properties>
  </rule>
  <rule ref="category/apex/design.xml/ExcessivePublicCount">
    <properties>
        <property name="minimum" value="12.0" />
    </properties>
  </rule>
  <rule ref="category/apex/design.xml/NcssConstructorCount">
      <properties>
          <property name="minimum" value="35.0" />
      </properties>
  </rule>
  <rule ref="category/apex/design.xml/NcssMethodCount">
    <properties>
        <property name="minimum" value="50.0" />
    </properties>
  </rule>
  <!-- <rule ref="category/apex/design.xml/NcssTypeCount" /> -->
  <!-- <rule ref="category/apex/design.xml/StdCyclomaticComplexity" /> -->
  <rule ref="category/apex/design.xml/TooManyFields">
    <properties>
        <property name="maxfields" value="20" />
    </properties>
  </rule>

  <!-- Documentation -->
  <rule ref="category/apex/documentation.xml/ApexDoc" />

  <!-- Error Prone -->
  <rule ref="category/apex/errorprone.xml/AvoidDirectAccessTriggerMap" />
  <rule ref="category/apex/errorprone.xml/AvoidHardcodingId" />
  <rule ref="category/apex/errorprone.xml/AvoidNonExistentAnnotations" />
  <rule ref="category/apex/errorprone.xml/EmptyCatchBlock" />
  <rule ref="category/apex/errorprone.xml/EmptyIfStmt" />
  <rule ref="category/apex/errorprone.xml/EmptyStatementBlock" />
  <rule ref="category/apex/errorprone.xml/EmptyWhileStmt" />
  <rule ref="category/apex/errorprone.xml/EmptyTryOrFinallyBlock" />
  <rule ref="category/apex/errorprone.xml/MethodWithSameNameAsEnclosingClass" />

  <!-- Performance -->
  <rule ref="category/apex/performance.xml/AvoidDmlStatementsInLoops" />
  <rule ref="category/apex/performance.xml/AvoidSoqlInLoops" />
  <rule ref="category/apex/performance.xml/AvoidSoslInLoops" />

  <!-- Security -->
  <rule ref="category/apex/security.xml/ApexBadCrypto" />
  <!-- <rule ref="category/apex/security.xml/ApexCRUDViolation" /> - - - - - Work to do here -->
  <rule ref="category/apex/security.xml/ApexCSRF" />
  <!-- <rule ref="category/apex/security.xml/ApexDangerousMethods" /> -->
  <rule ref="category/apex/security.xml/ApexInsecureEndpoint" />
  <!-- <rule ref="category/apex/security.xml/ApexOpenRedirect" /> -->
  <rule ref="category/apex/security.xml/ApexSharingViolations" />
  <rule ref="category/apex/security.xml/ApexSOQLInjection" />
  <rule ref="category/apex/security.xml/ApexSuggestUsingNamedCred" />
  <!-- Unsure about XSS below ... -->
  <rule ref="category/apex/security.xml/ApexXSSFromEscapeFalse" />
  <rule ref="category/apex/security.xml/ApexXSSFromURLParam" />
</ruleset>
